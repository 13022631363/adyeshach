plugins {
    id 'java'
    id 'maven'
    id 'io.izzel.taboolib' version '1.3'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
}

group = 'ink.ptms.adyeshach'
version = '1.2.21'

sourceCompatibility = 1.8
targetCompatibility = 1.8

taboolib {
    tabooLibVersion = '5.7.2'
    loaderVersion = '3.0.4'
    classifier = null
    builtin = true
}

task buildJar(dependsOn: [clean, jar])

repositories {
    mavenCentral()
}

dependencies {
    implementation 'ink.ptms.cronus:Cronus:1'
    implementation 'net.citizensnpcs:Citizens:2.0.18'
    implementation 'com.guillaumevdn.gcore:GCore:7.15.0'
    implementation 'com.guillaumevdn.questcreator:QuestCreator:5.30.0'
    implementation 'com.isnakebuzz.servernpc:ServerNPC:1.12.10:RELEASE'
    implementation 'ink.ptms.core:v11604:11604:all'
    implementation 'ink.ptms.core:v11600:11600:all'
    implementation 'ink.ptms.core:v11500:11500:all'
    implementation 'ink.ptms.core:v11400:11400:all'
    implementation 'ink.ptms.core:v11300:11300:all'
    implementation 'ink.ptms.core:v11200:11200:all'
    implementation 'ink.ptms.core:v11100:11100:all'
    implementation 'ink.ptms.core:v11000:11000:all'
    implementation 'ink.ptms.core:v10900:10900:all'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        expand name: rootProject.name, main: project.group + ".boot.PluginBoot", version: project.version, "libVersion": taboolib.tabooLibVersion
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: project.findProperty('repository')) {
                authentication(userName: project.findProperty('user'), password: project.findProperty('password'))
            }
            pom.artifactId = rootProject.name
            pom.groupId = 'ink.ptms'
            pom.version = project.version
            pom.packaging = 'jar'
        }
    }
}
